# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Paul Ramsey | Mark Leslie
# This file is distributed under the same license as the Introduction to PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-13 19:01-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../en/joins_advanced.rst:4
msgid "More Spatial Joins"
msgstr ""

#: ../../en/joins_advanced.rst:6
msgid "In the last section we saw the :command:`ST_Centroid(geometry)` and :command:`ST_Union([geometry])` functions, and some simple examples. In this section we will do some more elaborate things with them."
msgstr ""

#: ../../en/joins_advanced.rst:11
#: ../../en/joins_advanced.rst:31
msgid "Creating a Census Tracts Table"
msgstr ""

#: ../../en/joins_advanced.rst:13
msgid "In the workshop ``\\data\\`` directory, is a file that includes attribute data, but no geometry, ``nyc_census_sociodata.sql``. The table includes interesting socioeconomic data about New York: commute times, incomes, and education attainment. There is just one problem. The data are summarized by \"census tract\" and we have no census tract spatial data!"
msgstr ""

#: ../../en/joins_advanced.rst:15
msgid "In this section we will"
msgstr ""

#: ../../en/joins_advanced.rst:17
msgid "Load the ``nyc_census_sociodata.sql`` table"
msgstr ""

#: ../../en/joins_advanced.rst:18
msgid "Create a spatial table for census tracts"
msgstr ""

#: ../../en/joins_advanced.rst:19
msgid "Join the attribute data to the spatial data"
msgstr ""

#: ../../en/joins_advanced.rst:20
msgid "Carry out some analysis using our new data"
msgstr ""

#: ../../en/joins_advanced.rst:23
msgid "Loading nyc_census_sociodata.sql"
msgstr ""

#: ../../en/joins_advanced.rst:25
msgid "Open the SQL query window in PgAdmin"
msgstr ""

#: ../../en/joins_advanced.rst:26
msgid "Select **File->Open** from the menu and browse to the ``nyc_census_sociodata.sql`` file"
msgstr ""

#: ../../en/joins_advanced.rst:27
msgid "Press the \"Run Query\" button"
msgstr ""

#: ../../en/joins_advanced.rst:28
msgid "If you press the \"Refresh\" button in PgAdmin, the list of tables should now include at ``nyc_census_sociodata`` table"
msgstr ""

#: ../../en/joins_advanced.rst:33
msgid "As we saw in the previous section, we can build up higher level geometries from the census block by summarizing on substrings of the ``blkid`` key. In order to get census tracts, we need to summarize grouping on the first 11 characters of the ``blkid``."
msgstr ""

#: ../../en/joins_advanced.rst:46
msgid "Create the new table using the :command:`ST_Union` aggregate:"
msgstr ""

#: ../../en/joins_advanced.rst:64
msgid "Join the Attributes to the Spatial Data"
msgstr ""

#: ../../en/joins_advanced.rst:66
msgid "Join the table of tract geometries to the table of tract attributes with a standard attribute join"
msgstr ""

#: ../../en/joins_advanced.rst:87
msgid "Answer an Interesting Question"
msgstr ""

#: ../../en/joins_advanced.rst:89
msgid "Answer an interesting question! \"List top 10 New York neighborhoods ordered by the proportion of people who have graduate degrees.\""
msgstr ""

#: ../../en/joins_advanced.rst:104
msgid "We sum up the statistics we are interested, then divide them together at the end. In order to avoid divide-by-zero errors, we don't bother bringing in tracts that have a population count of zero."
msgstr ""

#: ../../en/joins_advanced.rst:124
msgid "New York geographers will be wondering at the presence of \"Flatbush\" in this list of over-educated neighborhoods. The answer is discussed in the next section."
msgstr ""

#: ../../en/joins_advanced.rst:129
msgid "Polygon/Polygon Joins"
msgstr ""

#: ../../en/joins_advanced.rst:131
msgid "In our interesting query (in :ref:`interestingquestion`) we used the :command:`ST_Intersects(geometry_a, geometry_b)` function to determine which census tract polygons to include in each neighborhood summary. Which leads to the question: what if a tract falls on the border between two neighborhoods? It will intersect both, and so will be included in the summary statistics for **both**."
msgstr ""

#: ../../en/joins_advanced.rst:135
msgid "To avoid this kind of double counting there are two methods:"
msgstr ""

#: ../../en/joins_advanced.rst:137
msgid "The simple method is to ensure that each tract only falls in **one** summary area (using :command:`ST_Centroid(geometry)`)"
msgstr ""

#: ../../en/joins_advanced.rst:138
msgid "The complex method is to divide crossing tracts at the borders (using :command:`ST_Intersection(geometry,geometry)`)"
msgstr ""

#: ../../en/joins_advanced.rst:140
msgid "Here is an example of using the simple method to avoid double counting in our graduate education query:"
msgstr ""

#: ../../en/joins_advanced.rst:155
msgid "Note that the query takes longer to run now, because the :command:`ST_Centroid` function  has to be run on every census tract."
msgstr ""

#: ../../en/joins_advanced.rst:172
msgid "Avoiding double counting changes the results!"
msgstr ""

#: ../../en/joins_advanced.rst:175
msgid "What about Flatbush?"
msgstr ""

#: ../../en/joins_advanced.rst:177
msgid "In particular, the Flatbush neighborhood has dropped off the list. The reason why can be seen by looking more closely at the map of the Flatbush neighborhood in our table."
msgstr ""

#: ../../en/joins_advanced.rst:181
msgid "As defined by our data source, Flatbush is not really a neighborhood in the conventional sense, since it just covers the area of Prospect Park. The census tract for that area records, naturally, zero residents. However, the neighborhood boundary does scrape one of the expensive census tracts bordering the north side of the park (in the gentrified Park Slope neighborhood). When using polygon/polygon tests, this single tract was added to the otherwise empty Flatbush, resulting in the very high score for that query."
msgstr ""

#: ../../en/joins_advanced.rst:186
msgid "Large Radius Distance Joins"
msgstr ""

#: ../../en/joins_advanced.rst:188
msgid "A query that is fun to ask is \"How do the commute times of people near (within 500 meters) subway stations differ from those of people far away from subway stations?\""
msgstr ""

#: ../../en/joins_advanced.rst:190
msgid "However, the question runs into some problems of double counting: many people will be within 500 meters of multiple subway stations. Compare the population of New York:"
msgstr ""

#: ../../en/joins_advanced.rst:201
msgid "With the population of the people in New York within 500 meters of a subway station:"
msgstr ""

#: ../../en/joins_advanced.rst:214
msgid "There's more people close to the subway than there are people! Clearly, our simple SQL is making a big double-counting error. You can see the problem looking at the picture of the buffered subways."
msgstr ""

#: ../../en/joins_advanced.rst:218
msgid "The solution is to ensure that we have only distinct census blocks before passing them into the summarization portion of the query. We can do that by breaking our query up into a subquery that finds the distinct blocks, wrapped in a summarization query that returns our answer:"
msgstr ""

#: ../../en/joins_advanced.rst:235
msgid "That's better! So a bit over half the population of New York is within 500m (about a 5-7 minute walk) of the subway."
msgstr ""
