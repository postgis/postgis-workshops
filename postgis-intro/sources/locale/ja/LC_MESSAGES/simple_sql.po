# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Paul Ramsey | Mark Leslie
# This file is distributed under the same license as the Introduction to
# PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-13 19:01-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../en/simple_sql.rst:4
msgid "Simple SQL"
msgstr ""

#: ../../en/simple_sql.rst:6
msgid ""
":term:`SQL`, or \"Structured Query Language\", is a means of asking "
"questions of, and updating data in, relational databases. You have already "
"seen SQL when we created our first database.  Recall:"
msgstr ""

#: ../../en/simple_sql.rst:12
msgid ""
"But that was a question about the database.  Now that we've loaded data into "
"our database, let's use SQL to ask questions of the data! For example,"
msgstr ""

#: ../../en/simple_sql.rst:14
msgid "\"What are the names of all the neighborhoods in New York City?\""
msgstr ""

#: ../../en/simple_sql.rst:16
msgid ""
"Open up the SQL query window in pgAdmin by clicking the \"Query Tool\" "
"button."
msgstr ""

#: ../../en/simple_sql.rst:20
msgid "then enter the following query in to the query window"
msgstr ""

#: ../../en/simple_sql.rst:26
msgid "and click the **Execute Query** button (the green triangle)."
msgstr ""

#: ../../en/simple_sql.rst:30
msgid "The query will run for a few (milli)seconds and return the 129 results."
msgstr ""

#: ../../en/simple_sql.rst:35
msgid ""
"But what exactly happened here?  To understand, let's begin with the four "
"\"verbs\" of SQL,"
msgstr ""

#: ../../en/simple_sql.rst:37
msgid "``SELECT``, returns rows in response to a query"
msgstr ""

#: ../../en/simple_sql.rst:38
msgid "``INSERT``, adds new rows to a table"
msgstr ""

#: ../../en/simple_sql.rst:39
msgid "``UPDATE``, alters existing rows in a table"
msgstr ""

#: ../../en/simple_sql.rst:40
msgid "``DELETE``, removes rows from a table"
msgstr ""

#: ../../en/simple_sql.rst:42
msgid ""
"We will be working almost exclusively with ``SELECT`` in order to ask "
"questions of tables using spatial functions."
msgstr ""

#: ../../en/simple_sql.rst:45
msgid "SELECT queries"
msgstr ""

#: ../../en/simple_sql.rst:47
msgid "A select query is generally of the form::"
msgstr ""

#: ../../en/simple_sql.rst:53
msgid ""
"For a synopsis of all ``SELECT`` parameters, see the `PostgresSQL "
"documentation  <http://www.postgresql.org/docs/current/interactive/sql-"
"select.html>`_."
msgstr ""

#: ../../en/simple_sql.rst:55
msgid ""
"The ``some_columns`` are either column names or functions of column values. "
"The ``some_data_source`` is either a single table, or a composite table "
"created by joining two tables on a key or condition. The ``some_condition`` "
"is a filter that restricts the number of rows to be returned."
msgstr ""

#: ../../en/simple_sql.rst:57
msgid "\"What are the names of all the neighborhoods in Brooklyn?\""
msgstr ""

#: ../../en/simple_sql.rst:59
msgid ""
"We return to our ``nyc_neighborhoods`` table with a filter in hand.  The "
"table contains all the neighborhoods in New York, but we only want the ones "
"in Brooklyn."
msgstr ""

#: ../../en/simple_sql.rst:67
msgid ""
"The query will run for even fewer (milli)seconds and return the 23 results."
msgstr ""

#: ../../en/simple_sql.rst:69
msgid ""
"Sometimes we will need to apply a function to the results of our query. For "
"example,"
msgstr ""

#: ../../en/simple_sql.rst:71
msgid ""
"\"What is the number of letters in the names of all the neighborhoods in "
"Brooklyn?\""
msgstr ""

#: ../../en/simple_sql.rst:73
msgid ""
"Fortunately, PostgreSQL has a string length function, :command:"
"`char_length(string)`."
msgstr ""

#: ../../en/simple_sql.rst:81
msgid ""
"Often, we are less interested in the individual rows than in a statistic "
"that applies to all of them. So knowing the lengths of the neighborhood "
"names might be less interesting than knowing the average length of the "
"names. Functions that take in multiple rows and return a single result are "
"called \"aggregate\" functions."
msgstr ""

#: ../../en/simple_sql.rst:83
msgid ""
"PostgreSQL has a series of built-in aggregate functions, including the "
"general purpose :command:`avg()` for average values and :command:`stddev()` "
"for standard deviations."
msgstr ""

#: ../../en/simple_sql.rst:85
msgid ""
"\"What is the average number of letters and standard deviation of number of "
"letters in the names of all the neighborhoods in Brooklyn?\""
msgstr ""

#: ../../en/simple_sql.rst:99
msgid ""
"The aggregate functions in our last example were applied to every row in the "
"result set. What if we want the summaries to be carried out over smaller "
"groups within the overall result set? For that we add a ``GROUP BY`` clause. "
"Aggregate functions often need an added ``GROUP BY`` statement to group the "
"result-set by one or more columns."
msgstr ""

#: ../../en/simple_sql.rst:101
msgid ""
"\"What is the average number of letters in the names of all the "
"neighborhoods in New York City, reported by borough?\""
msgstr ""

#: ../../en/simple_sql.rst:109
msgid ""
"We include the ``boroname`` column in the output result so we can determine "
"which statistic applies to which borough. In an aggregate query, you can "
"only output columns that are either (a) members of the grouping clause or "
"(b) aggregate functions."
msgstr ""

#: ../../en/simple_sql.rst:122
msgid "Function List"
msgstr ""

#: ../../en/simple_sql.rst:124
msgid ""
"`avg(expression) <http://www.postgresql.org/docs/current/static/functions-"
"aggregate.html#FUNCTIONS-AGGREGATE-TABLE>`_: PostgreSQL aggregate function "
"that returns the average value of a numeric column."
msgstr ""

#: ../../en/simple_sql.rst:126
msgid ""
"`char_length(string) <http://www.postgresql.org/docs/current/static/"
"functions-string.html>`_: PostgreSQL string function that returns the number "
"of character in a string."
msgstr ""

#: ../../en/simple_sql.rst:128
msgid ""
"`stddev(expression) <http://www.postgresql.org/docs/current/static/functions-"
"aggregate.html#FUNCTIONS-AGGREGATE-STATISTICS-TABLE>`_: PostgreSQL aggregate "
"function that returns the standard deviation of input values."
msgstr ""
